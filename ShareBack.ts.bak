import { FetchData, TOAUTH2AuthContext, TFetchDataCallback } from '@bearer/intents'
import Client from './client'

type TShareParams = {
  channelId: string
}

type TShareContext = {
  channel: {
    id: string
  }
}

type TShareBody = {
  payload: string
}

type TPayload = {
  type: 'interactive_message'
  actions: [
    {
      name: 'game'
      type: 'button'
      value: 'chess'
    }
  ]
  callback_id: 'wopr_game'
  team: {
    id: string
    domain: string
  }
  channel: {
    id: string
    name: string
  }
  user: {
    id: string
    name: string
  }
  action_ts: string
  message_ts: string
  attachment_id: string
  token: string
  is_app_unfurl: boolean
  original_message: {
    text: string
    username: string
    bot_id: string
    attachments: [
      {
        author_name: 'Bearer'
        callback_id: 'wopr_game'
        fallback: "Don't forget to bring your :bear: to the party!!"
        text: "Don't forget to bring your :bear: to the party!!"
        title: 'Bearer Demo'
        footer: 'Bearer'
        id: 1
        title_link: 'https:\\/\\/bearer.sh\\/'
        author_link: 'https:\\/\\/bearer.sh'
        author_icon: 'https:\\/\\/cdn-images-1.medium.com\\/fit\\/c\\/120\\/120\\/0*aIvYu2ePw18IVxE_.jpg'
        footer_icon: 'https:\\/\\/cdn-images-1.medium.com\\/fit\\/c\\/120\\/120\\/0*aIvYu2ePw18IVxE_.jpg'
        ts: 1540198403
        color: '2eb886'
        fields: [
          {
            title: 'Priority'
            value: 'High'
            short: false
          }
        ]
        actions: [
          {
            id: '1'
            name: 'game'
            text: 'Chess'
            type: 'button'
            value: 'chess'
            style: ''
          },
          {
            id: '2'
            name: 'game'
            text: "Falken's Maze"
            type: 'button'
            value: 'maze'
            style: ''
          }
        ]
      }
    ]
    type: 'message'
    subtype: 'bot_message'
    ts: any
  }
  response_url: string
  trigger_id: any
}

export default class ShareBackIntent {
  static intentName: string = 'ShareBack'
  static intentType: any = FetchData

  static action(
    context: TOAUTH2AuthContext & TShareContext,
    _params: TShareParams,
    body: TShareBody,
    callback: TFetchDataCallback
  ) {
    const payload: TPayload = JSON.parse(body.payload)
    const channel = context.channel
    try {
      Client(context.authAccess.accessToken)
        .post(`chat.postMessage`, {
          channel: channel.id,
          as_user: false,
          parse: 'full',
          text: `${payload.actions[0].value} by ${payload.user.name}`
        })
        .then(({ data }) => {
          if (data.ok) {
            callback({})
          } else {
            callback({ data })
          }
        })
        .catch(error => {
          callback({ error: error.toString() })
        })
    } catch (error) {
      callback({ error: error.toString() })
    }
  }
}
